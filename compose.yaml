version: "3"

services:
  source_db:
    container_name: source_db_container
    image: postgres:16.2
    restart: always
    env_file:
      - ./source_db/.env
    volumes:
      - ./source_db/dataset:/docker-entrypoint-initdb.d
    ports:
      - $SOURCE_DB_HOST_PORT:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
      # networks:
      #   - postgres

      # networks:
      #   postgres:
      #     driver: bridge

  target_db:
    container_name: target_db_container
    image: postgres:16.2
    restart: always
    env_file:
      - ./target_db/.env
    volumes:
      - ./target_db/dataset:/docker-entrypoint-initdb.d
    ports:
      - $TARGET_DB_HOST_PORT:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  source_db_api:
    container_name: source_db_api_container
    depends_on:
      source_db:
        condition: service_healthy
    build: ./source_db_api
    env_file:
      - .env
      - ./source_db/.env
    command: uvicorn source_db_api.main:app --host 0.0.0.0
    # volumes:
    #   - .:/source_db_api
    ports:
      - $SOURCE_DB_API_HOST_PORT:8000
    # networks:
    #   - postgres
    # etl:
    #   entrypoint: [ "echo", "Service disabled" ] # just for disable this service
    #   container_name: etl_container
    #   depends_on:
    #     - target_db
    #   build: ./etl
    #   env_file:
    #     - .env
    #   command: uvicorn source_db_api.main:app --host 0.0.0.0
    #   # volumes:
    #   #   - .:/source_db_api
    #   ports:
    #     - "8082:8000"
    #   # networks:
    #   #   - postgres


